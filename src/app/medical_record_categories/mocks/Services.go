// Code generated by mockery v2.10.6. DO NOT EDIT.

package mocks

import (
	medical_record_categories "digimer-api/src/app/medical_record_categories"

	mock "github.com/stretchr/testify/mock"
)

// Services is an autogenerated mock type for the Services type
type Services struct {
	mock.Mock
}

// AmendMedicalRecordCategoryByID provides a mock function with given fields: id, medical_record_category
func (_m *Services) AmendMedicalRecordCategoryByID(id int, medical_record_category medical_record_categories.Domain) error {
	ret := _m.Called(id, medical_record_category)

	var r0 error
	if rf, ok := ret.Get(0).(func(int, medical_record_categories.Domain) error); ok {
		r0 = rf(id, medical_record_category)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CountMedicalRecordCategoryByID provides a mock function with given fields: id
func (_m *Services) CountMedicalRecordCategoryByID(id int) int {
	ret := _m.Called(id)

	var r0 int
	if rf, ok := ret.Get(0).(func(int) int); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// CreateMedicalRecordCategory provides a mock function with given fields: domain
func (_m *Services) CreateMedicalRecordCategory(domain medical_record_categories.Domain) error {
	ret := _m.Called(domain)

	var r0 error
	if rf, ok := ret.Get(0).(func(medical_record_categories.Domain) error); ok {
		r0 = rf(domain)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetAllMedicalRecordCategories provides a mock function with given fields:
func (_m *Services) GetAllMedicalRecordCategories() ([]medical_record_categories.Domain, error) {
	ret := _m.Called()

	var r0 []medical_record_categories.Domain
	if rf, ok := ret.Get(0).(func() []medical_record_categories.Domain); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]medical_record_categories.Domain)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetMedicalRecordCategoryByID provides a mock function with given fields: id
func (_m *Services) GetMedicalRecordCategoryByID(id int) (medical_record_categories.Domain, error) {
	ret := _m.Called(id)

	var r0 medical_record_categories.Domain
	if rf, ok := ret.Get(0).(func(int) medical_record_categories.Domain); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(medical_record_categories.Domain)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// RemoveMedicalRecordCategoryByID provides a mock function with given fields: id
func (_m *Services) RemoveMedicalRecordCategoryByID(id int) error {
	ret := _m.Called(id)

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
